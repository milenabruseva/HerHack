{"ast":null,"code":"var _jsxFileName = \"/Users/astridvarga/Documents/dev/HerHack/fe-web/src/components/Card.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { PieChart, Pie } from 'recharts';\nimport { getSentiment } from '../services/sentiment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    width: '80%'\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)'\n  },\n  title: {\n    fontSize: 14\n  },\n  pos: {\n    marginBottom: 12\n  }\n});\nexport default function SimpleCard(props) {\n  _s();\n\n  const classes = useStyles();\n  let keys = [];\n  let values = [];\n  const [sentiment, setSentiment] = useState([]);\n  useEffect(() => {\n    let mounted = true;\n    getSentiment(props.stock).then(sentiment => {\n      if (mounted) {\n        keys = Object.keys(sentiment);\n        values = Object.values(sentiment);\n        updatedsentiment = keys.map((x, i) => {\n          return {\n            name: x,\n            value: parseFloat(values[i].toFixed(2))\n          };\n        });\n        setSentiment(sentiment);\n      }\n    });\n    return () => mounted = false;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.title,\n        color: \"textSecondary\",\n        gutterBottom: true,\n        children: \"Stock of the Day\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        component: \"h2\",\n        children: props.stock\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.pos,\n        color: \"textSecondary\",\n        children: props.stockName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          size: \"small\",\n          children: [\"Learn More about \", props.stock]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.title,\n        color: \"textSecondary\",\n        gutterBottom: true,\n        children: \"Sentiment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PieChart, {\n      width: 200,\n      height: 200,\n      children: /*#__PURE__*/_jsxDEV(Pie, {\n        dataKey: \"name\",\n        startAngle: 180,\n        endAngle: 0,\n        data: sentiment,\n        cx: \"50%\",\n        cy: \"50%\",\n        outerRadius: 40,\n        fill: \"#8884d8\",\n        label: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SimpleCard, \"mbLqEr3XPLYXcVmd6x6Uo0T2tho=\", false, function () {\n  return [useStyles];\n});\n\n_c = SimpleCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleCard\");","map":{"version":3,"sources":["/Users/astridvarga/Documents/dev/HerHack/fe-web/src/components/Card.js"],"names":["React","useEffect","useState","makeStyles","Card","CardActions","CardContent","Button","Typography","PieChart","Pie","getSentiment","useStyles","root","minWidth","display","flexDirection","justifyContent","width","bullet","margin","transform","title","fontSize","pos","marginBottom","SimpleCard","props","classes","keys","values","sentiment","setSentiment","mounted","stock","then","Object","updatedsentiment","map","x","i","name","value","parseFloat","toFixed","stockName"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Card from '@material-ui/core/Card'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\n\nimport { PieChart, Pie } from 'recharts'\n\nimport { getSentiment } from '../services/sentiment'\n\nconst useStyles = makeStyles({\n    root: {\n        minWidth: 275,\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        width: '80%',\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    title: {\n        fontSize: 14,\n    },\n    pos: {\n        marginBottom: 12,\n    },\n})\n\nexport default function SimpleCard(props) {\n    const classes = useStyles()\n    let keys = []\n    let values = []\n\n    const [sentiment, setSentiment] = useState([])\n    useEffect(() => {\n        let mounted = true\n        getSentiment(props.stock).then((sentiment) => {\n            if (mounted) {\n                keys = Object.keys(sentiment)\n                values = Object.values(sentiment)\n                updatedsentiment = keys.map((x, i) => {\n                    return { name: x, value: parseFloat(values[i].toFixed(2)) }\n                })\n                setSentiment(sentiment)\n            }\n        })\n        return () => (mounted = false)\n    }, [])\n\n    return (\n        <Card className={classes.root}>\n            <CardContent>\n                <Typography\n                    className={classes.title}\n                    color=\"textSecondary\"\n                    gutterBottom\n                >\n                    Stock of the Day\n                </Typography>\n                <Typography variant=\"h5\" component=\"h2\">\n                    {props.stock}\n                </Typography>\n                <Typography className={classes.pos} color=\"textSecondary\">\n                    {props.stockName}\n                </Typography>\n                <CardActions>\n                    <Button size=\"small\">Learn More about {props.stock}</Button>\n                </CardActions>\n            </CardContent>\n            <CardContent>\n                <Typography\n                    className={classes.title}\n                    color=\"textSecondary\"\n                    gutterBottom\n                >\n                    Sentiment\n                </Typography>\n            </CardContent>\n            <PieChart width={200} height={200}>\n                <Pie\n                    dataKey=\"name\"\n                    startAngle={180}\n                    endAngle={0}\n                    data={sentiment}\n                    cx=\"50%\"\n                    cy=\"50%\"\n                    outerRadius={40}\n                    fill=\"#8884d8\"\n                    label\n                />\n            </PieChart>\n        </Card>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}