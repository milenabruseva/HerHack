{"ast":null,"code":"var _jsxFileName = \"/Users/astridvarga/Documents/dev/HerHack/fe-web/src/components/Results/Results.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Container } from '@material-ui/core';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Results() {\n  _s();\n\n  const [data, setData] = useState({\n    title: '',\n    date: '',\n    subreddit: '',\n    num_commnets: '',\n    score: '',\n    url: '',\n    body: ''\n  });\n  useEffect(() => {\n    axios.get('http://164.90.163.136/app/search?searchquery=GME&startdate=2021-01-24%2002:33:15&enddate=2021-01-27%2002:33:15').then(res => {\n      let prefix = res.data.hits.hits;\n      var arr = [];\n      Object.keys(prefix).forEach(function (key) {\n        arr.push(prefix[key]);\n      });\n      console.log('Home Data: ', arr);\n      {\n        arr.map(prefix => setData({\n          title: prefix._source.title,\n          date: prefix._source.date,\n          subreddit: prefix._source.subreddit,\n          num_comments: prefix._source.num_comments,\n          score: prefix._source.score,\n          url: prefix._source.url,\n          body: prefix._source.body\n        }));\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"results\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"ToTheM00n Search Results \\uD83D\\uDC8E \\uD83D\\uDC50 \\uD83D\\uDC8E \\uD83D\\uDC50 \\uD83D\\uDC8E \\uD83D\\uDC50 \\uD83D\\uDC8E \\uD83D\\uDC50\\uD83D\\uDC8E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), data.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Date: \", item.date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Subreddit: \", item.subreddit]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Number of Comments: \", item.num_comments]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Number of Upvotes: \", item.score]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"url: \", item.url]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: item.body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Results, \"ayuOqJfGU+50P/rNP6MKZwabEjs=\");\n\n_c = Results;\n\nvar _c;\n\n$RefreshReg$(_c, \"Results\");","map":{"version":3,"sources":["/Users/astridvarga/Documents/dev/HerHack/fe-web/src/components/Results/Results.js"],"names":["React","useEffect","useState","Container","axios","Results","data","setData","title","date","subreddit","num_commnets","score","url","body","get","then","res","prefix","hits","arr","Object","keys","forEach","key","push","console","log","map","_source","num_comments","catch","err","item","index"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Container } from '@material-ui/core'\nimport axios from 'axios'\n\nexport default function Results() {\n    const [data, setData] = useState({\n        title: '',\n        date: '',\n        subreddit: '',\n        num_commnets: '',\n        score: '',\n        url: '',\n        body: '',\n    })\n    useEffect(() => {\n        axios\n            .get(\n                'http://164.90.163.136/app/search?searchquery=GME&startdate=2021-01-24%2002:33:15&enddate=2021-01-27%2002:33:15',\n            )\n            .then((res) => {\n                let prefix = res.data.hits.hits\n                var arr = []\n                Object.keys(prefix).forEach(function (key) {\n                    arr.push(prefix[key])\n                })\n                console.log('Home Data: ', arr)\n                {\n                    arr.map((prefix) =>\n                        setData({\n                            title: prefix._source.title,\n                            date: prefix._source.date,\n                            subreddit: prefix._source.subreddit,\n                            num_comments: prefix._source.num_comments,\n                            score: prefix._source.score,\n                            url: prefix._source.url,\n                            body: prefix._source.body,\n                        }),\n                    )\n                }\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }, [])\n\n    return (\n        <main className=\"results\">\n            <Container>\n                <h1>ToTheM00n Search Results 💎 👐 💎 👐 💎 👐 💎 👐💎</h1>\n                {data.map((item, index) => (\n                    <div>\n                        <h5>{item.title}</h5>\n                        <p>Date: {item.date}</p>\n                        <p>Subreddit: {item.subreddit}</p>\n                        <p>Number of Comments: {item.num_comments}</p>\n                        <p>Number of Upvotes: {item.score}</p>\n                        <p>url: {item.url}</p>\n                        <p>{item.body}</p>\n                    </div>\n                ))}\n            </Container>\n        </main>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}