{"ast":null,"code":"var _jsxFileName = \"/Users/astridvarga/Documents/dev/HerHack/fe-web/src/components/StockDetails/StockDetails.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Container } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport { getSentiment } from '../../services/sentiment';\nimport { getDetails } from '../../services/details';\nimport StraightAnglePieChartBig from '../StraightAnglePieChartBig';\nimport Barchart from '../Barchart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    '& > *': {\n      textAlign: 'center',\n      margin: theme.spacing(1),\n      width: theme.spacing(55),\n      height: theme.spacing(55)\n    }\n  }\n}));\nexport default function StockDetails() {\n  _s();\n\n  const classes = useStyles();\n  let {\n    id\n  } = useParams();\n  const [sentiment, setSentiment] = useState([]);\n  useEffect(() => {\n    let mounted = true;\n    getSentiment(id).then(sentiment => {\n      if (mounted) {\n        let keys = Object.keys(sentiment);\n        let values = Object.values(sentiment);\n        sentiment = keys.map((x, i) => {\n          return {\n            name: x,\n            value: parseFloat(values[i].toFixed(2))\n          };\n        });\n        setSentiment(sentiment);\n      }\n    });\n    return () => mounted = false;\n  }, []);\n  const [details, setDetails] = useState([]);\n  useEffect(() => {\n    let mounted = true;\n    getDetails(id).then(details => {\n      if (mounted) {\n        const stats = details.aggregations.comments_stats;\n        const firstStats = firstN(stats, 4);\n        let keys = Object.keys(firstStats);\n        let values = Object.values(firstStats);\n        details = keys.map((x, i) => {\n          return {\n            name: x,\n            value: parseFloat(values[i].toFixed(2))\n          };\n        });\n        console.log(details);\n        setDetails(details);\n      }\n    });\n    return () => mounted = false;\n  }, []);\n  const [histogram, setHistogram] = useState([]);\n  useEffect(() => {\n    let mounted = true;\n    getDetails(id).then(details => {\n      if (mounted) {\n        const stats = details.aggregations.comments_stats;\n        const firstStats = firstN(stats, 4);\n        let keys = Object.keys(firstStats);\n        let values = Object.values(firstStats);\n        details = keys.map((x, i) => {\n          return {\n            name: x,\n            value: parseFloat(values[i].toFixed(2))\n          };\n        });\n        console.log(details);\n        setDetails(details);\n      }\n    });\n    return () => mounted = false;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"stock-details\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.root,\n        children: [/*#__PURE__*/_jsxDEV(Paper, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            color: \"textSecondary\",\n            children: \"Sentiment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(StraightAnglePieChartBig, {\n            data: sentiment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Paper, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            color: \"textSecondary\",\n            children: \"Comments Stats\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Barchart, {\n            data: details\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Paper, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            color: \"textSecondary\",\n            children: \"Date Histogram\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Barchart, {\n            data: histogram\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n}\n\n_s(StockDetails, \"gqdVmwuDLPKVp9YKlCB8LbgkU+I=\", false, function () {\n  return [useStyles, useParams];\n});\n\n_c = StockDetails;\n\nfunction firstN(obj, n) {\n  return Object.keys(obj) //get the keys out\n  .sort() //this will ensure consistent ordering of what you will get back. If you want something in non-aphabetical order, you will need to supply a custom sorting function\n  .slice(0, n) //get the first N\n  .reduce(function (memo, current) {\n    //generate a new object out of them\n    memo[current] = obj[current];\n    return memo;\n  }, {});\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"StockDetails\");","map":{"version":3,"sources":["/Users/astridvarga/Documents/dev/HerHack/fe-web/src/components/StockDetails/StockDetails.js"],"names":["React","useEffect","useState","useParams","Container","makeStyles","Typography","Paper","getSentiment","getDetails","StraightAnglePieChartBig","Barchart","useStyles","theme","root","display","flexWrap","textAlign","margin","spacing","width","height","StockDetails","classes","id","sentiment","setSentiment","mounted","then","keys","Object","values","map","x","i","name","value","parseFloat","toFixed","details","setDetails","stats","aggregations","comments_stats","firstStats","firstN","console","log","histogram","setHistogram","obj","n","sort","slice","reduce","memo","current"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { Container } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\nimport Paper from '@material-ui/core/Paper'\n\nimport { getSentiment } from '../../services/sentiment'\nimport { getDetails } from '../../services/details'\n\nimport StraightAnglePieChartBig from '../StraightAnglePieChartBig'\nimport Barchart from '../Barchart'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        '& > *': {\n            textAlign: 'center',\n            margin: theme.spacing(1),\n            width: theme.spacing(55),\n            height: theme.spacing(55),\n        },\n    },\n}))\n\nexport default function StockDetails() {\n    const classes = useStyles()\n    let { id } = useParams()\n\n    const [sentiment, setSentiment] = useState([])\n    useEffect(() => {\n        let mounted = true\n        getSentiment(id).then((sentiment) => {\n            if (mounted) {\n                let keys = Object.keys(sentiment)\n                let values = Object.values(sentiment)\n                sentiment = keys.map((x, i) => {\n                    return { name: x, value: parseFloat(values[i].toFixed(2)) }\n                })\n                setSentiment(sentiment)\n            }\n        })\n        return () => (mounted = false)\n    }, [])\n\n    const [details, setDetails] = useState([])\n    useEffect(() => {\n        let mounted = true\n        getDetails(id).then((details) => {\n            if (mounted) {\n                const stats = details.aggregations.comments_stats\n                const firstStats = firstN(stats, 4)\n                let keys = Object.keys(firstStats)\n                let values = Object.values(firstStats)\n                details = keys.map((x, i) => {\n                    return { name: x, value: parseFloat(values[i].toFixed(2)) }\n                })\n\n                console.log(details)\n\n                setDetails(details)\n            }\n        })\n        return () => (mounted = false)\n    }, [])\n\n    const [histogram, setHistogram] = useState([])\n    useEffect(() => {\n        let mounted = true\n        getDetails(id).then((details) => {\n            if (mounted) {\n                const stats = details.aggregations.comments_stats\n                const firstStats = firstN(stats, 4)\n                let keys = Object.keys(firstStats)\n                let values = Object.values(firstStats)\n                details = keys.map((x, i) => {\n                    return { name: x, value: parseFloat(values[i].toFixed(2)) }\n                })\n\n                console.log(details)\n\n                setDetails(details)\n            }\n        })\n        return () => (mounted = false)\n    }, [])\n\n    return (\n        <main className=\"stock-details\">\n            <Container>\n                <h1>{id}</h1>\n                <div className={classes.root}>\n                    <Paper>\n                        <Typography variant=\"h6\" color=\"textSecondary\">\n                            Sentiment\n                        </Typography>\n                        <StraightAnglePieChartBig data={sentiment} />\n                    </Paper>\n                    <Paper>\n                        <Typography variant=\"h6\" color=\"textSecondary\">\n                            Comments Stats\n                        </Typography>\n                        <Barchart data={details} />\n                    </Paper>\n                    <Paper>\n                        <Typography variant=\"h6\" color=\"textSecondary\">\n                            Date Histogram\n                        </Typography>\n                        <Barchart data={histogram} />\n                    </Paper>\n                </div>\n            </Container>\n        </main>\n    )\n}\n\nfunction firstN(obj, n) {\n    return Object.keys(obj) //get the keys out\n        .sort() //this will ensure consistent ordering of what you will get back. If you want something in non-aphabetical order, you will need to supply a custom sorting function\n        .slice(0, n) //get the first N\n        .reduce(function (memo, current) {\n            //generate a new object out of them\n            memo[current] = obj[current]\n            return memo\n        }, {})\n}\n"]},"metadata":{},"sourceType":"module"}